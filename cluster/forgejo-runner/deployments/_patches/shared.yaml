apiVersion: apps/v1
kind: Deployment
metadata:
  # Kustomize requires a name here, but it isn't used.
  name: forgejo-runner
spec:
  selector:
    matchLabels:
      apps.zarantonello.dev/name: forgejo-runner
      apps.zarantonello.dev/namespace: forgejo-runner
  template:
    metadata:
      labels:
        apps.zarantonello.dev/name: forgejo-runner
        apps.zarantonello.dev/namespace: forgejo-runner
    spec:
      containers:
        - command:
            - forgejo-runner
            - daemon
            - --config=/etc/runner/config.yaml
          env:
            - name: DOCKER_HOST
              value: unix:///run/podman/podman.sock
          image: code.forgejo.org/forgejo/runner:11.1.1@sha256:e435bb347f07ae0d1ed580afd993105e2470af83b3e9af3495ac6dcce7972f28
          name: runner
          resources:
            limits:
              # Restart container if caches are too big.
              ephemeral-storage: 2Gi
          securityContext: &runnerSecurityContext
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsUser: 0
          volumeMounts: &runnerVolumeMounts
            - mountPath: /etc/runner
              name: runner-config
            - mountPath: /data
              name: runner-data
            - mountPath: /tmp
              name: runner-tmp
            - mountPath: /run/podman
              name: podman-socket
        - command:
            - podman
            - system
            - service
            - --time=0
          image: quay.io/podman/stable:v5.6.1
          name: podman
          resources:
            limits:
              # Restart container if caches are too big.
              ephemeral-storage: 3Gi
          securityContext:
            capabilities:
              drop:
                - ALL
            privileged: true
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /var/cache/containers
              name: podman-var-cache-containers
            - mountPath: /var/tmp
              name: podman-var-tmp
            - mountPath: /var/lib/containers
              name: podman-var-lib-containers
            - mountPath: /run
              name: podman-run
            - mountPath: /run/podman
              name: podman-socket
      enableServiceLinks: false
      hostAliases:
        # Override this so that runners push directly to forgejo, without passing
        # through Cloudflare's proxy.
        - hostnames:
            - git.zarantonello.dev
          ip: 10.95.0.3
      initContainers:
        - command:
            - forgejo-runner
            - register
            - --no-interactive
            - --config=/etc/runner/config.yaml
            - --labels=$(NODE_NAME):docker://busybox,srv-$(NODE_TYPE):docker://busybox,srv-generic:docker://busybox
            - --instance=http://http.forgejo.svc.k8s.zarantonello.dev
            - --token=$(REGISTRATION_TOKEN)
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # Allows to distinguish between 'large' and 'small' runners.
            - name: NODE_TYPE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['node.zarantonello.dev/type']
          envFrom:
            - secretRef:
                name: forgejo-runner-env
          image: code.forgejo.org/forgejo/runner:11.1.1@sha256:e435bb347f07ae0d1ed580afd993105e2470af83b3e9af3495ac6dcce7972f28
          name: register
          securityContext: *runnerSecurityContext
          volumeMounts: *runnerVolumeMounts
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - configMap:
            name: runner-config
          name: runner-config
        - emptyDir: {}
          name: runner-tmp
        - emptyDir: {}
          name: runner-data
        - emptyDir:
            medium: Memory
          name: podman-run
        - emptyDir: {}
          name: podman-var-tmp
        - emptyDir: {}
          name: podman-var-lib-containers
        - emptyDir: {}
          name: podman-var-cache-containers
        - emptyDir:
            medium: Memory
          name: podman-socket
